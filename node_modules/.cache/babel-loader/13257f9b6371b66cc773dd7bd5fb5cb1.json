{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import{XAxis,Tooltip,CartesianGrid,YAxis,ResponsiveContainer,AreaChart,Area}from\"recharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var CityPage=function CityPage(){var _useParams=useParams(),cityId=_useParams.cityId;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chart=_useState4[0],setChart=_useState4[1];var navigate=useNavigate();useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://api.openweathermap.org/data/2.5/forecast?id=\".concat(cityId,\"&units=metric&appid=\").concat(process.env.REACT_APP_OPENWEATHERMAP_API_KEY));case 3:response=_context.sent;_context.next=6;return response.json();case 6:_data=_context.sent;setData(_data);fillData(_data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[cityId]);var fillData=function fillData(data){var tempData=[];for(var num=0;num<data.cnt;num++){tempData.push({date:data.list[num].dt_txt,temp:parseFloat(data.list[num].main.temp)});}setChart(tempData);};return/*#__PURE__*/_jsx(\"div\",{children:chart.length!==0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:function onClick(){return navigate(\"/\");},children:\"Back\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"container\",children:\"charts of 5 days for your favorite city\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[data.city.name,\", \",data.city.country]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:1300,height:500,children:/*#__PURE__*/_jsxs(AreaChart,{data:chart,children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"linearGradient\",{id:\"color\",x1:\"0\",y1:\"0\",x2:\"0\",y2:\"1\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#0000ff\",stopOpacity:0.4}),/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#00cc99\",stopOpacity:0.5})]})}),/*#__PURE__*/_jsx(Area,{dataKey:\"temp\",stroke:\"#3431A7\",fill:\"url(#color)\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tickCount:5}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"temp\",tickCount:4}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(CartesianGrid,{opacity:0.1,vertical:false})]})})]})});};","map":{"version":3,"sources":["/Users/ammaradel/Desktop/weather-app/src/components/CityPage.js"],"names":["React","useEffect","useState","useNavigate","useParams","XAxis","Tooltip","CartesianGrid","YAxis","ResponsiveContainer","AreaChart","Area","CityPage","cityId","data","setData","chart","setChart","navigate","fetchData","fetch","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","response","json","fillData","console","log","tempData","num","cnt","push","date","list","dt_txt","temp","parseFloat","main","length","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport {\n  XAxis,\n  Tooltip,\n  CartesianGrid,\n  YAxis,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n} from \"recharts\";\n\nexport const CityPage = () => {\n  const { cityId } = useParams();\n  const [data, setData] = useState({});\n  const [chart, setChart] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?id=${cityId}&units=metric&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`\n        );\n        const data = await response.json();\n        setData(data);\n        fillData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [cityId]);\n\n  const fillData = (data) => {\n    const tempData = [];\n    for (let num = 0; num < data.cnt; num++) {\n      tempData.push({\n        date: data.list[num].dt_txt,\n        temp: parseFloat(data.list[num].main.temp),\n      });\n    }\n    setChart(tempData);\n  };\n\n  return (\n    <div>\n      {chart.length !== 0 && (\n        <>\n          <button className=\"back\" onClick={() => navigate(\"/\")}>\n            Back\n          </button>\n          <h1 className=\"container\">charts of 5 days for your favorite city</h1>\n          <h3>\n            {data.city.name}, {data.city.country}\n          </h3>\n          <ResponsiveContainer width={1300} height={500}>\n            <AreaChart data={chart}>\n              <defs>\n                <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"0%\" stopColor=\"#0000ff\" stopOpacity={0.4} />\n                  <stop offset=\"0%\" stopColor=\"#00cc99\" stopOpacity={0.5} />\n                </linearGradient>\n              </defs>\n              <Area dataKey=\"temp\" stroke=\"#3431A7\" fill=\"url(#color)\" />\n              <XAxis dataKey=\"date\" tickCount={5} />\n              <YAxis dataKey=\"temp\" tickCount={4} />\n              <Tooltip />\n              <CartesianGrid opacity={0.1} vertical={false} />\n            </AreaChart>\n          </ResponsiveContainer>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}