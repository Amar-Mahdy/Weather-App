{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ammaradel/Desktop/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var WeatherContext=/*#__PURE__*/createContext();export var WeatherProvider=function WeatherProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),cityName=_useState4[0],setCityName=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errMsg=_useState8[0],setErrMsg=_useState8[1];var URL=\"http://api.openweathermap.org/data/2.5/weather?units=metric&q=\".concat(cityName,\"&appid=\").concat(process.env.REACT_APP_OPENWEATHERMAP_API_KEY);var getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response,weather;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.prev=1;_context.next=4;return fetch(URL);case 4:response=_context.sent;_context.next=7;return response.json();case 7:weather=_context.sent;if(!(response.status!==200||!response.ok)){_context.next=13;break;}setErrMsg(weather.message);throw new Error(weather.message);case 13:setIsLoading(true);setData([].concat(_toConsumableArray(data),[weather]));setErrMsg(null);case 16:_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 21:_context.prev=21;setIsLoading(false);setCityName(\"\");return _context.finish(21);case 25:case\"end\":return _context.stop();}}},_callee,null,[[1,18,21,25]]);}));return function getWeather(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(WeatherContext.Provider,{value:{data:data,setData:setData,cityName:cityName,setCityName:setCityName,getWeather:getWeather,isLoading:isLoading,setIsLoading:setIsLoading,errMsg:errMsg,setErrMsg:setErrMsg},children:props.children});};","map":{"version":3,"sources":["/Users/ammaradel/Desktop/weather-app/src/components/WeatherContext.js"],"names":["useState","createContext","WeatherContext","WeatherProvider","props","data","setData","cityName","setCityName","isLoading","setIsLoading","errMsg","setErrMsg","URL","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","getWeather","e","fetch","response","json","weather","status","ok","message","Error","console","log","children"],"mappings":"inBAAA,OAASA,QAAT,CAAmBC,aAAnB,KAAwC,OAAxC,C,2CAEA,MAAO,IAAMC,CAAAA,cAAc,cAAGD,aAAa,EAApC,CAEP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACxC,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAAgCN,QAAQ,CAAC,EAAD,CAAxC,yCAAOO,QAAP,eAAiBC,WAAjB,eACA,eAAkCR,QAAQ,CAAC,KAAD,CAA1C,yCAAOS,SAAP,eAAkBC,YAAlB,eACA,eAA4BV,QAAQ,CAAC,IAAD,CAApC,yCAAOW,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,GAAG,yEAAoEN,QAApE,mBAAsFO,OAAO,CAACC,GAAR,CAAYC,gCAAlG,CAAT,CAEA,GAAMC,CAAAA,UAAU,0FAAG,iBAAOC,CAAP,uIACjBR,YAAY,CAAC,IAAD,CAAZ,CADiB,sCAGQS,CAAAA,KAAK,CAACN,GAAD,CAHb,QAGTO,QAHS,qCAIOA,CAAAA,QAAQ,CAACC,IAAT,EAJP,QAITC,OAJS,oBAKXF,QAAQ,CAACG,MAAT,GAAoB,GAApB,EAA2B,CAACH,QAAQ,CAACI,EAL1B,2BAMbZ,SAAS,CAACU,OAAO,CAACG,OAAT,CAAT,CANa,KAOP,IAAIC,CAAAA,KAAJ,CAAUJ,OAAO,CAACG,OAAlB,CAPO,SASbf,YAAY,CAAC,IAAD,CAAZ,CAEAJ,OAAO,8BAAKD,IAAL,GAAWiB,OAAX,GAAP,CACAV,SAAS,CAAC,IAAD,CAAT,CAZa,yFAefe,OAAO,CAACC,GAAR,cAfe,yBAiBflB,YAAY,CAAC,KAAD,CAAZ,CACAF,WAAW,CAAC,EAAD,CAAX,CAlBe,sGAAH,kBAAVS,CAAAA,UAAU,4CAAhB,CAsBA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EACE,KAAK,CAAE,CACLZ,IAAI,CAAJA,IADK,CAELC,OAAO,CAAPA,OAFK,CAGLC,QAAQ,CAARA,QAHK,CAILC,WAAW,CAAXA,WAJK,CAKLS,UAAU,CAAVA,UALK,CAMLR,SAAS,CAATA,SANK,CAOLC,YAAY,CAAZA,YAPK,CAQLC,MAAM,CAANA,MARK,CASLC,SAAS,CAATA,SATK,CADT,UAaGR,KAAK,CAACyB,QAbT,EADF,CAiBD,CA/CM","sourcesContent":["import { useState, createContext } from \"react\";\n\nexport const WeatherContext = createContext();\n\nexport const WeatherProvider = (props) => {\n  const [data, setData] = useState([]);\n  const [cityName, setCityName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(null);\n\n  const URL = `http://api.openweathermap.org/data/2.5/weather?units=metric&q=${cityName}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`;\n\n  const getWeather = async (e) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(URL);\n      const weather = await response.json();\n      if (response.status !== 200 || !response.ok) {\n        setErrMsg(weather.message);\n        throw new Error(weather.message);\n      } else {\n        setIsLoading(true);\n\n        setData([...data, weather]);\n        setErrMsg(null);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n      setCityName(\"\");\n    }\n  };\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        data,\n        setData,\n        cityName,\n        setCityName,\n        getWeather,\n        isLoading,\n        setIsLoading,\n        errMsg,\n        setErrMsg,\n      }}\n    >\n      {props.children}\n    </WeatherContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}