{"ast":null,"code":"var _jsxFileName = \"/Users/ammaradel/Desktop/weather-app/src/components/cityPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { XAxis, Tooltip, CartesianGrid, YAxis, ResponsiveContainer, AreaChart, Area } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CityPage = () => {\n  _s();\n\n  const {\n    cityId\n  } = useParams();\n  const [data, setData] = useState({});\n  const [chart, setChart] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${cityId}&units=metric&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\n        const data = await response.json();\n        console.log(data);\n        setData(data);\n        fillData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [cityId]);\n\n  const fillData = data => {\n    const tempData = [];\n\n    for (let num = 0; num < data.cnt; num++) {\n      tempData.push({\n        date: data.list[num].dt_txt,\n        temp: parseFloat(data.list[num].main.temp)\n      });\n    }\n\n    setChart(tempData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chart.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"container\",\n        children: \"charts of 5 days for your favorite city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [data.city.name, \", \", data.city.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: 1300,\n        height: 500,\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: chart,\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n              id: \"color\",\n              x1: \"0\",\n              y1: \"0\",\n              x2: \"0\",\n              y2: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"0%\",\n                stopColor: \"#0000ff\",\n                stopOpacity: 0.4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"0%\",\n                stopColor: \"#00cc99\",\n                stopOpacity: 0.5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            dataKey: \"temp\",\n            stroke: \"#3431A7\",\n            fill: \"url(#color)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tickCount: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"temp\",\n            tickCount: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            opacity: 0.1,\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CityPage, \"2rtTVOqen8RggG6+G2Ebj++Rocc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CityPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityPage\");","map":{"version":3,"sources":["/Users/ammaradel/Desktop/weather-app/src/components/cityPage.js"],"names":["React","useEffect","useState","useNavigate","useParams","XAxis","Tooltip","CartesianGrid","YAxis","ResponsiveContainer","AreaChart","Area","CityPage","cityId","data","setData","chart","setChart","navigate","fetchData","response","fetch","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","json","console","log","fillData","err","tempData","num","cnt","push","date","list","dt_txt","temp","parseFloat","main","length","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  XAxis,\n  Tooltip,\n  CartesianGrid,\n  YAxis,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n} from \"recharts\";\n\nexport const CityPage = () => {\n  const { cityId } = useParams();\n  const [data, setData] = useState({});\n  const [chart, setChart] = useState([]);\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?id=${cityId}&units=metric&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`\n        );\n        const data = await response.json();\n        console.log(data);\n        setData(data);\n        fillData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [cityId]);\n\n  const fillData = (data) => {\n    const tempData = [];\n    for (let num = 0; num < data.cnt; num++) {\n      tempData.push({\n        date: (data.list[num].dt_txt),\n        temp: parseFloat(data.list[num].main.temp),\n      });\n    }\n    setChart(tempData);\n  };\n\n  return (\n    <div>\n      {chart.length !== 0 && (\n        <>\n          <button className=\"back\" onClick={() => navigate(\"/\")}>\n            Back\n          </button>\n          <h1 className=\"container\">charts of 5 days for your favorite city</h1>\n          <h3>\n            {data.city.name}, {data.city.country}\n          </h3>\n          <ResponsiveContainer width={1300} height={500}>\n            <AreaChart data={chart}>\n              <defs>\n                <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"0%\" stopColor=\"#0000ff\" stopOpacity={0.4} />\n                  <stop offset=\"0%\" stopColor=\"#00cc99\" stopOpacity={0.5} />\n                </linearGradient>\n              </defs>\n              <Area dataKey=\"temp\" stroke=\"#3431A7\" fill=\"url(#color)\" />\n              <XAxis dataKey=\"date\" tickCount={5} />\n              <YAxis dataKey=\"temp\" tickCount={4} />\n              <Tooltip />\n              <CartesianGrid opacity={0.1} vertical={false} />\n            </AreaChart>\n          </ResponsiveContainer>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}